// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/pane/proto/pane.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PaneControl struct {
	// Types that are valid to be assigned to Control:
	//	*PaneControl_Connect
	//	*PaneControl_WindowChange
	Control              isPaneControl_Control `protobuf_oneof:"control"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PaneControl) Reset()         { *m = PaneControl{} }
func (m *PaneControl) String() string { return proto.CompactTextString(m) }
func (*PaneControl) ProtoMessage()    {}
func (*PaneControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_65adb0e31fae1ba9, []int{0}
}

func (m *PaneControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaneControl.Unmarshal(m, b)
}
func (m *PaneControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaneControl.Marshal(b, m, deterministic)
}
func (m *PaneControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaneControl.Merge(m, src)
}
func (m *PaneControl) XXX_Size() int {
	return xxx_messageInfo_PaneControl.Size(m)
}
func (m *PaneControl) XXX_DiscardUnknown() {
	xxx_messageInfo_PaneControl.DiscardUnknown(m)
}

var xxx_messageInfo_PaneControl proto.InternalMessageInfo

type isPaneControl_Control interface {
	isPaneControl_Control()
}

type PaneControl_Connect struct {
	Connect *ConnectRequest `protobuf:"bytes,1,opt,name=connect,proto3,oneof"`
}

type PaneControl_WindowChange struct {
	WindowChange *WindowChange `protobuf:"bytes,2,opt,name=window_change,json=windowChange,proto3,oneof"`
}

func (*PaneControl_Connect) isPaneControl_Control() {}

func (*PaneControl_WindowChange) isPaneControl_Control() {}

func (m *PaneControl) GetControl() isPaneControl_Control {
	if m != nil {
		return m.Control
	}
	return nil
}

func (m *PaneControl) GetConnect() *ConnectRequest {
	if x, ok := m.GetControl().(*PaneControl_Connect); ok {
		return x.Connect
	}
	return nil
}

func (m *PaneControl) GetWindowChange() *WindowChange {
	if x, ok := m.GetControl().(*PaneControl_WindowChange); ok {
		return x.WindowChange
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PaneControl) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PaneControl_OneofMarshaler, _PaneControl_OneofUnmarshaler, _PaneControl_OneofSizer, []interface{}{
		(*PaneControl_Connect)(nil),
		(*PaneControl_WindowChange)(nil),
	}
}

func _PaneControl_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PaneControl)
	// control
	switch x := m.Control.(type) {
	case *PaneControl_Connect:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Connect); err != nil {
			return err
		}
	case *PaneControl_WindowChange:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WindowChange); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PaneControl.Control has unexpected type %T", x)
	}
	return nil
}

func _PaneControl_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PaneControl)
	switch tag {
	case 1: // control.connect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConnectRequest)
		err := b.DecodeMessage(msg)
		m.Control = &PaneControl_Connect{msg}
		return true, err
	case 2: // control.window_change
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WindowChange)
		err := b.DecodeMessage(msg)
		m.Control = &PaneControl_WindowChange{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PaneControl_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PaneControl)
	// control
	switch x := m.Control.(type) {
	case *PaneControl_Connect:
		s := proto.Size(x.Connect)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PaneControl_WindowChange:
		s := proto.Size(x.WindowChange)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ConnectRequest struct {
	FdSocketPath         string   `protobuf:"bytes,1,opt,name=fd_socket_path,json=fdSocketPath,proto3" json:"fd_socket_path,omitempty"`
	TtyPath              string   `protobuf:"bytes,2,opt,name=tty_path,json=ttyPath,proto3" json:"tty_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_65adb0e31fae1ba9, []int{1}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetFdSocketPath() string {
	if m != nil {
		return m.FdSocketPath
	}
	return ""
}

func (m *ConnectRequest) GetTtyPath() string {
	if m != nil {
		return m.TtyPath
	}
	return ""
}

type WindowChange struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WindowChange) Reset()         { *m = WindowChange{} }
func (m *WindowChange) String() string { return proto.CompactTextString(m) }
func (*WindowChange) ProtoMessage()    {}
func (*WindowChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_65adb0e31fae1ba9, []int{2}
}

func (m *WindowChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WindowChange.Unmarshal(m, b)
}
func (m *WindowChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WindowChange.Marshal(b, m, deterministic)
}
func (m *WindowChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WindowChange.Merge(m, src)
}
func (m *WindowChange) XXX_Size() int {
	return xxx_messageInfo_WindowChange.Size(m)
}
func (m *WindowChange) XXX_DiscardUnknown() {
	xxx_messageInfo_WindowChange.DiscardUnknown(m)
}

var xxx_messageInfo_WindowChange proto.InternalMessageInfo

type DoneReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoneReply) Reset()         { *m = DoneReply{} }
func (m *DoneReply) String() string { return proto.CompactTextString(m) }
func (*DoneReply) ProtoMessage()    {}
func (*DoneReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_65adb0e31fae1ba9, []int{3}
}

func (m *DoneReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoneReply.Unmarshal(m, b)
}
func (m *DoneReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoneReply.Marshal(b, m, deterministic)
}
func (m *DoneReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoneReply.Merge(m, src)
}
func (m *DoneReply) XXX_Size() int {
	return xxx_messageInfo_DoneReply.Size(m)
}
func (m *DoneReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DoneReply.DiscardUnknown(m)
}

var xxx_messageInfo_DoneReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PaneControl)(nil), "pane.PaneControl")
	proto.RegisterType((*ConnectRequest)(nil), "pane.ConnectRequest")
	proto.RegisterType((*WindowChange)(nil), "pane.WindowChange")
	proto.RegisterType((*DoneReply)(nil), "pane.DoneReply")
}

func init() { proto.RegisterFile("internal/pane/proto/pane.proto", fileDescriptor_65adb0e31fae1ba9) }

var fileDescriptor_65adb0e31fae1ba9 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x50, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x6d, 0x4a, 0xf9, 0xfa, 0x75, 0x13, 0x23, 0x2e, 0x1e, 0xaa, 0x07, 0x91, 0xe0, 0xa1, 0xa7,
	0x44, 0x2a, 0x45, 0x44, 0xbc, 0x34, 0x1e, 0x7a, 0xac, 0xf1, 0x20, 0x78, 0x09, 0xdb, 0x64, 0x9a,
	0x04, 0xb7, 0xb3, 0x31, 0x9d, 0x12, 0xf2, 0x03, 0xfc, 0xdf, 0x92, 0x89, 0x4a, 0x04, 0x2f, 0xbb,
	0x6f, 0xde, 0x9b, 0xc7, 0x9b, 0x19, 0x71, 0x51, 0x20, 0x41, 0x85, 0x4a, 0x07, 0xa5, 0x42, 0x08,
	0xca, 0xca, 0x90, 0x61, 0xe8, 0x33, 0x94, 0xa3, 0x16, 0x7b, 0x1f, 0x96, 0xb0, 0xd7, 0x0a, 0x21,
	0x34, 0x48, 0x95, 0xd1, 0xf2, 0x5a, 0x8c, 0x13, 0x83, 0x08, 0x09, 0x4d, 0xad, 0x4b, 0x6b, 0x66,
	0xcf, 0x4f, 0x7d, 0xf6, 0x84, 0x1d, 0x19, 0xc1, 0xfb, 0x01, 0xf6, 0xb4, 0x1a, 0x44, 0xdf, 0x6d,
	0xf2, 0x4e, 0x1c, 0xd5, 0x05, 0xa6, 0xa6, 0x8e, 0x93, 0x5c, 0x61, 0x06, 0xd3, 0x21, 0xfb, 0x64,
	0xe7, 0x7b, 0x61, 0x29, 0x64, 0x65, 0x35, 0x88, 0x9c, 0xba, 0x57, 0x2f, 0x27, 0x1c, 0xd6, 0xe6,
	0x7a, 0x4f, 0xc2, 0xfd, 0x1d, 0x21, 0xaf, 0x84, 0xbb, 0x4d, 0xe3, 0xbd, 0x49, 0xde, 0x80, 0xe2,
	0x52, 0x51, 0xce, 0x03, 0x4d, 0x22, 0x67, 0x9b, 0x3e, 0x33, 0xb9, 0x56, 0x94, 0xcb, 0x33, 0xf1,
	0x9f, 0xa8, 0xe9, 0xf4, 0x21, 0xeb, 0x63, 0xa2, 0xa6, 0x95, 0x3c, 0x57, 0x38, 0xfd, 0x74, 0xcf,
	0x16, 0x93, 0x47, 0x83, 0x10, 0x41, 0xa9, 0x9b, 0xf9, 0x83, 0x18, 0xb5, 0x6b, 0xcb, 0x85, 0xb0,
	0xbf, 0x72, 0xb9, 0x3c, 0xe9, 0xa6, 0xee, 0x5d, 0xe4, 0xfc, 0xb8, 0xa3, 0x7e, 0xac, 0xde, 0x60,
	0x66, 0x2d, 0x6f, 0x5f, 0x17, 0x59, 0x41, 0xf9, 0x61, 0xe3, 0x27, 0x66, 0x17, 0xb4, 0x4b, 0xed,
	0x0a, 0xad, 0x01, 0xb3, 0x80, 0x0a, 0x4d, 0xc1, 0x1f, 0xa7, 0xbf, 0xe7, 0x77, 0xf3, 0x8f, 0xbf,
	0x9b, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe3, 0x7e, 0xee, 0xa3, 0x9e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PaneClient is the client API for Pane service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaneClient interface {
	ConnectPane(ctx context.Context, opts ...grpc.CallOption) (Pane_ConnectPaneClient, error)
}

type paneClient struct {
	cc *grpc.ClientConn
}

func NewPaneClient(cc *grpc.ClientConn) PaneClient {
	return &paneClient{cc}
}

func (c *paneClient) ConnectPane(ctx context.Context, opts ...grpc.CallOption) (Pane_ConnectPaneClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Pane_serviceDesc.Streams[0], "/pane.Pane/ConnectPane", opts...)
	if err != nil {
		return nil, err
	}
	x := &paneConnectPaneClient{stream}
	return x, nil
}

type Pane_ConnectPaneClient interface {
	Send(*PaneControl) error
	CloseAndRecv() (*DoneReply, error)
	grpc.ClientStream
}

type paneConnectPaneClient struct {
	grpc.ClientStream
}

func (x *paneConnectPaneClient) Send(m *PaneControl) error {
	return x.ClientStream.SendMsg(m)
}

func (x *paneConnectPaneClient) CloseAndRecv() (*DoneReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(DoneReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PaneServer is the server API for Pane service.
type PaneServer interface {
	ConnectPane(Pane_ConnectPaneServer) error
}

func RegisterPaneServer(s *grpc.Server, srv PaneServer) {
	s.RegisterService(&_Pane_serviceDesc, srv)
}

func _Pane_ConnectPane_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PaneServer).ConnectPane(&paneConnectPaneServer{stream})
}

type Pane_ConnectPaneServer interface {
	SendAndClose(*DoneReply) error
	Recv() (*PaneControl, error)
	grpc.ServerStream
}

type paneConnectPaneServer struct {
	grpc.ServerStream
}

func (x *paneConnectPaneServer) SendAndClose(m *DoneReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *paneConnectPaneServer) Recv() (*PaneControl, error) {
	m := new(PaneControl)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Pane_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pane.Pane",
	HandlerType: (*PaneServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ConnectPane",
			Handler:       _Pane_ConnectPane_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "internal/pane/proto/pane.proto",
}
